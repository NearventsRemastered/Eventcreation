{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nexport function setRNConfiguration(_config) {\n  throw new Error('setRNConfiguration is not supported by the browser');\n}\nexport function requestAuthorization(_success, _error) {\n  throw new Error('requestAuthorization is not supported by the browser');\n}\nexport function getCurrentPosition(_x, _x2, _x3) {\n  return _getCurrentPosition.apply(this, arguments);\n}\nfunction _getCurrentPosition() {\n  _getCurrentPosition = _asyncToGenerator(function* (success, error, options) {\n    if (typeof success !== 'function') {\n      throw new Error('success callback must be a function');\n    } else if (!navigator || !navigator.geolocation) {\n      console.error('Navigator is undefined');\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(success, error, options);\n  });\n  return _getCurrentPosition.apply(this, arguments);\n}\nexport function watchPosition(success, error, options) {\n  if (typeof success !== 'function') {\n    throw new Error('success callback must be a function');\n  } else if (!navigator || !navigator.geolocation) {\n    throw new Error('Navigator is undefined');\n  }\n  return navigator.geolocation.watchPosition(success, error, options);\n}\nexport function clearWatch(watchID) {\n  if (!navigator || !navigator.geolocation) {\n    console.error('Navigator is undefined');\n    return;\n  }\n  navigator.geolocation.clearWatch(watchID);\n}\nexport function stopObserving() {\n  throw new Error('stopObserving is not supported by the browser');\n}","map":{"version":3,"names":["setRNConfiguration","_config","Error","requestAuthorization","_success","_error","getCurrentPosition","_x","_x2","_x3","_getCurrentPosition","apply","arguments","_asyncToGenerator","success","error","options","navigator","geolocation","console","watchPosition","clearWatch","watchID","stopObserving"],"sources":["C:\\Users\\Jordi\\Desktop\\apiex\\MiProyecto\\node_modules\\@react-native-community\\geolocation\\lib\\module\\implementation.ts"],"sourcesContent":["/**\n * Copyright (c) React Native Community\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {\n  GeolocationOptions,\n  GeolocationConfiguration,\n  GeolocationResponse,\n  GeolocationError,\n} from './NativeRNCGeolocation';\n\nexport function setRNConfiguration(_config: GeolocationConfiguration) {\n  throw new Error('setRNConfiguration is not supported by the browser');\n}\n\nexport function requestAuthorization(\n  _success?: () => void,\n  _error?: (error: GeolocationError) => void\n) {\n  throw new Error('requestAuthorization is not supported by the browser');\n}\n\nexport async function getCurrentPosition(\n  success: (position: GeolocationResponse) => void,\n  error?: (error: GeolocationError) => void,\n  options?: GeolocationOptions\n) {\n  if (typeof success !== 'function') {\n    throw new Error('success callback must be a function');\n  } else if (!navigator || !navigator.geolocation) {\n    console.error('Navigator is undefined');\n    return;\n  }\n  navigator.geolocation.getCurrentPosition(success, error, options);\n}\n\nexport function watchPosition(\n  success: (position: GeolocationResponse) => void,\n  error?: (error: GeolocationError) => void,\n  options?: GeolocationOptions\n): number {\n  if (typeof success !== 'function') {\n    throw new Error('success callback must be a function');\n  } else if (!navigator || !navigator.geolocation) {\n    throw new Error('Navigator is undefined');\n  }\n  return navigator.geolocation.watchPosition(success, error, options);\n}\n\nexport function clearWatch(watchID: number) {\n  if (!navigator || !navigator.geolocation) {\n    console.error('Navigator is undefined');\n    return;\n  }\n  navigator.geolocation.clearWatch(watchID);\n}\n\nexport function stopObserving() {\n  throw new Error('stopObserving is not supported by the browser');\n}\n"],"mappings":";AAgBA,OAAO,SAASA,kBAAkBA,CAACC,OAAiC,EAAE;EACpE,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;AACvE;AAEA,OAAO,SAASC,oBAAoBA,CAClCC,QAAqB,EACrBC,MAA0C,EAC1C;EACA,MAAM,IAAIH,KAAK,CAAC,sDAAsD,CAAC;AACzE;AAEA,gBAAsBI,kBAAkBA,CAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,mBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAYxC,SAAAF,oBAAA;EAAAA,mBAAA,GAAAG,iBAAA,CAZO,WACLC,OAAgD,EAChDC,KAAyC,EACzCC,OAA4B,EAC5B;IACA,IAAI,OAAOF,OAAO,KAAK,UAAU,EAAE;MACjC,MAAM,IAAIZ,KAAK,CAAC,qCAAqC,CAAC;IACxD,CAAC,MAAM,IAAI,CAACe,SAAS,IAAI,CAACA,SAAS,CAACC,WAAW,EAAE;MAC/CC,OAAO,CAACJ,KAAK,CAAC,wBAAwB,CAAC;MACvC;IACF;IACAE,SAAS,CAACC,WAAW,CAACZ,kBAAkB,CAACQ,OAAO,EAAEC,KAAK,EAAEC,OAAO,CAAC;EACnE;EAAA,OAAAN,mBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAEA,OAAO,SAASQ,aAAaA,CAC3BN,OAAgD,EAChDC,KAAyC,EACzCC,OAA4B,EACpB;EACR,IAAI,OAAOF,OAAO,KAAK,UAAU,EAAE;IACjC,MAAM,IAAIZ,KAAK,CAAC,qCAAqC,CAAC;EACxD,CAAC,MAAM,IAAI,CAACe,SAAS,IAAI,CAACA,SAAS,CAACC,WAAW,EAAE;IAC/C,MAAM,IAAIhB,KAAK,CAAC,wBAAwB,CAAC;EAC3C;EACA,OAAOe,SAAS,CAACC,WAAW,CAACE,aAAa,CAACN,OAAO,EAAEC,KAAK,EAAEC,OAAO,CAAC;AACrE;AAEA,OAAO,SAASK,UAAUA,CAACC,OAAe,EAAE;EAC1C,IAAI,CAACL,SAAS,IAAI,CAACA,SAAS,CAACC,WAAW,EAAE;IACxCC,OAAO,CAACJ,KAAK,CAAC,wBAAwB,CAAC;IACvC;EACF;EACAE,SAAS,CAACC,WAAW,CAACG,UAAU,CAACC,OAAO,CAAC;AAC3C;AAEA,OAAO,SAASC,aAAaA,CAAA,EAAG;EAC9B,MAAM,IAAIrB,KAAK,CAAC,+CAA+C,CAAC;AAClE"},"metadata":{},"sourceType":"module","externalDependencies":[]}