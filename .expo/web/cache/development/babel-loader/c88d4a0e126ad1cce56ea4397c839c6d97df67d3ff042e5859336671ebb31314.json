{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Geolocation from '@react-native-community/geolocation';\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    location = _useState4[0],\n    setLocation = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    filteredData = _useState6[0],\n    setFilteredData = _useState6[1];\n  useEffect(function () {\n    Geolocation.getCurrentPosition(function (position) {\n      var _position$coords = position.coords,\n        latitude = _position$coords.latitude,\n        longitude = _position$coords.longitude;\n      setLocation({\n        latitude: latitude,\n        longitude: longitude\n      });\n    }, function (error) {\n      console.log(error);\n    }, {\n      enableHighAccuracy: true,\n      timeout: 20000,\n      maximumAge: 1000\n    });\n  }, []);\n  useEffect(function () {\n    axios.get('https://analisi.transparenciacatalunya.cat/resource/rhpv-yr4f.json').then(function (response) {\n      setData(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  useEffect(function () {\n    if (location !== null && data && data.length > 0) {\n      var filtered = filterByDistanceAndDate(data, location, 10, '2022-05-05');\n      setFilteredData(filtered);\n    }\n  }, [location, data]);\n  var filterByDistanceAndDate = function filterByDistanceAndDate(data, location, radius, date) {\n    var filtered = data.filter(function (item) {\n      var distance = getDistanceFromLatLonInKm(location.latitude, location.longitude, item.latitud, item.longitud);\n      var finished = item.fi_data === date;\n      return distance <= radius && finished;\n    });\n    return filtered;\n  };\n  var getDistanceFromLatLonInKm = function getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {\n    var R = 6371;\n    var dLat = deg2rad(lat2 - lat1);\n    var dLon = deg2rad(lon2 - lon1);\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = R * c;\n    return d;\n  };\n  var deg2rad = function deg2rad(deg) {\n    return deg * (Math.PI / 180);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Farmacias cercanas\"\n    }), filteredData.map(function (item, index) {\n      return _jsxs(View, {\n        style: styles.itemContainer,\n        children: [_jsx(Text, {\n          style: styles.itemTitle,\n          children: item.denominaci\n        }), _jsx(Text, {\n          style: styles.itemSubtitle,\n          children: \"Direcci\\xF3n: \" + item.direccio\n        }), _jsx(Text, {\n          style: styles.itemSubtitle,\n          children: \"Distancia: \" + getDistanceFromLatLonInKm(location.latitude, location.longitude, item.latitud, item.longitud).toFixed(2) + \" km\"\n        })]\n      }, index);\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","View","Geolocation","axios","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","location","setLocation","_useState5","_useState6","filteredData","setFilteredData","getCurrentPosition","position","_position$coords","coords","latitude","longitude","error","console","log","enableHighAccuracy","timeout","maximumAge","get","then","response","catch","length","filtered","filterByDistanceAndDate","radius","date","filter","item","distance","getDistanceFromLatLonInKm","latitud","longitud","finished","fi_data","lat1","lon1","lat2","lon2","R","dLat","deg2rad","dLon","a","Math","sin","cos","c","atan2","sqrt","d","deg","PI","style","styles","container","children","title","map","index","itemContainer","itemTitle","denominaci","itemSubtitle","direccio","toFixed","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/Jordi/Desktop/apiex/MiProyecto/src/ApiExample.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport Geolocation from '@react-native-community/geolocation';\r\nimport axios from 'axios';\r\n\r\nexport default function App() {\r\n  const [data, setData] = useState([]);\r\n  const [location, setLocation] = useState(null);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        setLocation({ latitude, longitude });\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('https://analisi.transparenciacatalunya.cat/resource/rhpv-yr4f.json')\r\n      .then((response) => {\r\n        setData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (location !== null && data && data.length > 0) {\r\n      const filtered = filterByDistanceAndDate(data, location, 10, '2022-05-05');\r\n      setFilteredData(filtered);\r\n    }\r\n  }, [location, data]);\r\n\r\n  const filterByDistanceAndDate = (data, location, radius, date) => {\r\n    const filtered = data.filter((item) => {\r\n      const distance = getDistanceFromLatLonInKm(\r\n        location.latitude,\r\n        location.longitude,\r\n        item.latitud,\r\n        item.longitud\r\n      );\r\n      const finished = item.fi_data === date;\r\n      return distance <= radius && finished;\r\n    });\r\n    return filtered;\r\n  };\r\n\r\n  const getDistanceFromLatLonInKm = (lat1, lon1, lat2, lon2) => {\r\n    const R = 6371; // Radius of the earth in km\r\n    const dLat = deg2rad(lat2 - lat1); // deg2rad below\r\n    const dLon = deg2rad(lon2 - lon1);\r\n    const a =\r\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      Math.cos(deg2rad(lat1)) *\r\n        Math.cos(deg2rad(lat2)) *\r\n        Math.sin(dLon / 2) *\r\n        Math.sin(dLon / 2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    const d = R * c; // Distance in km\r\n    return d;\r\n  };\r\n\r\n  const deg2rad = (deg) => {\r\n    return deg * (Math.PI / 180);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Farmacias cercanas</Text>\r\n      {filteredData.map((item, index) => (\r\n        <View key={index} style={styles.itemContainer}>\r\n          <Text style={styles.itemTitle}>{item.denominaci}</Text>\r\n          <Text style={styles.itemSubtitle}>{`Direcci√≥n: ${item.direccio}`}</Text>\r\n          <Text style={styles.itemSubtitle}>{`Distancia: ${getDistanceFromLatLonInKm(\r\n            location.latitude,\r\n            location.longitude,\r\n            item.latitud,\r\n            item.longitud\r\n          ).toFixed(2)} km`}</Text>\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}