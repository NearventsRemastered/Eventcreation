{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Geolocation from '@react-native-community/geolocation';\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ApiExample() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var filterByDistanceAndDate = function filterByDistanceAndDate(list) {\n    var userCoords = {\n      lat: 40.8124900,\n      lon: 0.5216000\n    };\n    var maxDistanceKm = 10;\n    var currentDate = new Date();\n    var filteredList = list.filter(function (item) {\n      var itemCoords = {\n        lat: parseFloat(item.latitud),\n        lon: parseFloat(item.longitud)\n      };\n      var distanceKm = getDistance(userCoords, itemCoords);\n      var itemDate = new Date(item.data_fi);\n      return distanceKm <= maxDistanceKm && itemDate <= currentDate;\n    });\n    return filteredList;\n  };\n  var getDistance = function getDistance(start, end) {\n    var deg2rad = function deg2rad(deg) {\n      return deg * (Math.PI / 180);\n    };\n    var R = 6371;\n    var dLat = deg2rad(end.lat - start.lat);\n    var dLon = deg2rad(end.lon - start.lon);\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(deg2rad(start.lat)) * Math.cos(deg2rad(end.lat)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = R * c;\n    console.log(d);\n    return d;\n  };\n  var filterByDistance = function filterByDistance(list) {\n    var filteredList = filterByDistanceAndDate(list);\n    setData(filteredList);\n  };\n  useEffect(function () {\n    Geolocation.getCurrentPosition(function (position) {\n      var _position$coords = position.coords,\n        latitude = _position$coords.latitude,\n        longitude = _position$coords.longitude;\n      axios.get(\"https://analisi.transparenciacatalunya.cat/resource/rhpv-yr4f.json?$where=latitud > \" + (latitude - 0.1) + \" AND latitud < \" + (latitude + 0.1) + \" AND longitud > \" + (longitude - 0.1) + \" AND longitud < \" + (longitude + 0.1)).then(function (response) {\n        return filterByDistance(response.data);\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    }, function (error) {\n      return console.log(error);\n    }, {\n      enableHighAccuracy: true,\n      timeout: 20000,\n      maximumAge: 1000\n    });\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: data.map(function (item) {\n      return console.log(\"hola\"), _jsx(Text, {\n        children: item.denominaci\n      }, item.codi);\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","View","Geolocation","axios","jsx","_jsx","ApiExample","_useState","_useState2","_slicedToArray","data","setData","filterByDistanceAndDate","list","userCoords","lat","lon","maxDistanceKm","currentDate","Date","filteredList","filter","item","itemCoords","parseFloat","latitud","longitud","distanceKm","getDistance","itemDate","data_fi","start","end","deg2rad","deg","Math","PI","R","dLat","dLon","a","sin","cos","c","atan2","sqrt","d","console","log","filterByDistance","getCurrentPosition","position","_position$coords","coords","latitude","longitude","get","then","response","catch","error","enableHighAccuracy","timeout","maximumAge","style","styles","container","children","map","denominaci","codi","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/Jordi/Desktop/apiex/MiProyecto/src/ApiExample.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport Geolocation from '@react-native-community/geolocation';\r\nimport axios from 'axios';\r\n\r\nexport default function ApiExample() {\r\n  const [data, setData] = useState([]);\r\n\r\n  const filterByDistanceAndDate = (list) => {\r\n    const userCoords = { lat: 40.8124900, lon: 0.5216000 }; // Replace with user's coordinates\r\n    const maxDistanceKm = 10;\r\n    const currentDate = new Date();\r\n    const filteredList = list.filter((item) => {\r\n      const itemCoords = { lat: parseFloat(item.latitud), lon: parseFloat(item.longitud) };\r\n      const distanceKm = getDistance(userCoords, itemCoords);\r\n      const itemDate = new Date(item.data_fi);\r\n      return distanceKm <= maxDistanceKm && itemDate <= currentDate;\r\n    });\r\n    return filteredList;\r\n  };\r\n\r\n  const getDistance = (start, end) => {\r\n    const deg2rad = (deg) => deg * (Math.PI / 180);\r\n    const R = 6371; // Earth's radius in km\r\n    const dLat = deg2rad(end.lat - start.lat);\r\n    const dLon = deg2rad(end.lon - start.lon);\r\n    const a =\r\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      Math.cos(deg2rad(start.lat)) *\r\n        Math.cos(deg2rad(end.lat)) *\r\n        Math.sin(dLon / 2) *\r\n        Math.sin(dLon / 2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    const d = R * c;\r\n    console.log(d);\r\n    return d;\r\n  };\r\n\r\n  const filterByDistance = (list) => {\r\n    const filteredList = filterByDistanceAndDate(list);\r\n    setData(filteredList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    Geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        axios\r\n          .get(\r\n            `https://analisi.transparenciacatalunya.cat/resource/rhpv-yr4f.json?$where=latitud > ${latitude - 0.1} AND latitud < ${latitude + 0.1} AND longitud > ${longitude - 0.1} AND longitud < ${longitude + 0.1}`\r\n          )\r\n          .then((response) => filterByDistance(response.data))\r\n          .catch((error) => console.log(error));\r\n      },\r\n      (error) => console.log(error),\r\n      { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {data.map((item) => (\r\n        console.log(\"hola\"),\r\n        <Text key={item.codi}>{item.denominaci}</Text>\r\n      ))}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}